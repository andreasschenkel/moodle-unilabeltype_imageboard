{"version":3,"file":"imageboardpreviewrenderer.min.js","sources":["../src/imageboardpreviewrenderer.js"],"sourcesContent":["/**\n * Unilabel type imageboard\n *\n * @author      Andreas Schenkel\n * @copyright   Andreas Schenkel {@link https://github.com/andreasschenkel}\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nexport const init = () => {\n    // Timeout notwendig, damit das Bild in der Draftarea \"vorhanden\" ist.\n    // document.querySelector('#id_unilabeltype_imageboard_backgroundimage_fieldset .filemanager-container .realpreview');\n    setTimeout(refreshBackgroundImage, 3000);\n    setTimeout(registerAllEventlistener, 4000);\n    // To show all images on pageload.\n    setTimeout(refreshAllImages, 5000);\n\n    var activeItem = null;\n    var activeNumber = null;\n    var itemToMove = null;\n    var canvas = null;\n    listener();\n\n    /**\n     *\n     */\n    function listener() {\n        ////console.log(\"listener\");\n        setTimeout(function() {\n            canvas = document.getElementById(\"unilabel-imageboard-background-area\");\n            canvas.addEventListener(\"mousedown\", dragStart, false);\n            canvas.addEventListener(\"mousemove\", drag, false);\n            canvas.addEventListener(\"mouseup\", dragEnd, false);\n        }, 1000);\n\n    }\n\n    /**\n     *\n     * @param {event} event\n     */\n    function dragStart(event) {\n        ////console.log(\"dragStart\");\n        if (event.target.classList.contains('image')) {\n            event.preventDefault();\n            activeItem = event.target;\n            activeNumber = event.target.getAttribute('id').split('unilabel-imageboard-imageid_')[1];\n            itemToMove = document.getElementById('unilabel_imageboard_imagediv_' + activeNumber);\n            var position = canvas.getBoundingClientRect();\n            var offsetLeft = position.left;\n            var offsetTop = position.top;\n            if (activeItem) {\n                itemToMove.style.left = Math.round(event.clientX - offsetLeft) + \"px\";\n                itemToMove.style.top = Math.round(event.clientY - offsetTop) + \"px\";\n            }\n        } else {\n            ///console.log(\"no image selected\");\n        }\n    }\n\n    /**\n     *\n     * @param {event} event\n     */\n    function drag(event) {\n        //event.preventDefault();\n        /////console.log(\"drag\");\n        if (activeItem) {\n            var position = canvas.getBoundingClientRect();\n            var offsetLeft = position.left;\n            var offsetTop = position.top;\n            itemToMove.style.left = Math.round(event.clientX - offsetLeft) + \"px\";\n            itemToMove.style.top = Math.round(event.clientY - offsetTop) + \"px\";\n            // Change the inputfield\n            const input_xposition = document.getElementById('id_unilabeltype_imageboard_xposition_' + (activeNumber));\n            const input_yposition = document.getElementById('id_unilabeltype_imageboard_yposition_' + (activeNumber));\n            input_xposition.value = Math.round(event.clientX - offsetLeft);\n            input_yposition.value = Math.round(event.clientY - offsetTop);\n        }\n    }\n\n    /**\n     *\n     * @param {event} event\n     */\n    function dragEnd(event) {\n        //event.preventDefault();\n        //// console.log(\"dragEnd\");\n        if (activeItem) {\n            var position = canvas.getBoundingClientRect();\n            var offsetLeft = position.left;\n            var offsetTop = position.top;\n            itemToMove.style.left = Math.round(event.clientX - offsetLeft) + \"px\";\n            itemToMove.style.top = Math.round(event.clientY - offsetTop) + \"px\";\n\n            // Change the inputfield\n            const input_xposition = document.getElementById('id_unilabeltype_imageboard_xposition_' + (activeNumber));\n            const input_yposition = document.getElementById('id_unilabeltype_imageboard_yposition_' + (activeNumber));\n            input_xposition.value = Math.round(event.clientX - offsetLeft);\n            input_yposition.value = Math.round(event.clientY - offsetTop);\n            activeItem = null;\n            activeNumber = null;\n        }\n    }\n\n\n    /**\n     * Register eventlistener to the all input fields of the form to register\n     * focus-out events from input fields in order to trigger a fresh of the preview.\n     */\n    function registerAllEventlistener() {\n        // First: When uploading a backgroundimage the backgroundimage of the backgroundimagediv must be updated.\n        let backgroundfileNode = document.getElementById('id_unilabeltype_imageboard_backgroundimage_fieldset');\n        if (backgroundfileNode) {\n            let observer = new MutationObserver(refreshBackgroundImage);\n            observer.observe(backgroundfileNode, {attributes: true, childList: true, subtree: true});\n        }\n        // Also add listener for canvas size\n        let canvasx = document.getElementById('id_unilabeltype_imageboard_canvaswidth');\n        if (canvasx) {\n            let observer = new MutationObserver(refreshBackgroundImage);\n            observer.observe(canvasx, {attributes: true, childList: true, subtree: true});\n        }\n        let canvasy = document.getElementById('id_unilabeltype_imageboard_canvasheight');\n        if (canvasy) {\n            let observer = new MutationObserver(refreshBackgroundImage);\n            observer.observe(canvasy, {attributes: true, childList: true, subtree: true});\n        }\n\n        // Second add listener to the add image button for new added images.\n        let add_element_button = document.querySelectorAll('[id^=\"button-mform1\"]')[0];\n        add_element_button.addEventListener(\"click\", function() {\n            // No we can get the new form input fields and register a focusout listener\n            // and in case of focus out we update the rendered image.\n            // Thus we have to add a new div without any content and whenever there is a focusout event we will update this.\n            // Then register listener for all images already exists\n            setTimeout(function() {\n                // An element was added so we have to add a div for the image\n                // to the dom and wie need to register listener to the ne inputfieds of the element\n                const singleElements = document.querySelectorAll('[id^=\"fitem_id_unilabeltype_imageboard_title_\"]');\n                let number = singleElements.length;\n                addImageToDom(number - 1);\n                setTimeout(function() {\n                    registerAllListenersForAllElements();\n                }, 1000);\n            }, 1000);\n        });\n\n        // Third register listener for all images already exists\n        setTimeout(function() {\n            registerAllListenersForAllElements();\n        }, 1000);\n    }\n\n    /**\n     *\n     */\n    function registerAllListenersForAllElements() {\n        // Third register listener for all images already exists\n        const singleElements = document.querySelectorAll('[id^=\"fitem_id_unilabeltype_imageboard_title_\"]');\n        for (let i = 0; i < singleElements.length; i++) {\n            let number = singleElements[i].getAttribute('id').split('fitem_id_unilabeltype_imageboard_title_')[1];\n            registerAllListenersForSingleElement(number);\n        }\n    }\n\n    /**\n     * Registers to every input field a listener do find focusout events andthen call refreshimage().\n     * @param {int} number\n     */\n    function registerAllListenersForSingleElement(number) {\n        const input_title = document.getElementById('id_unilabeltype_imageboard_title_' + (number));\n        input_title.addEventListener(\"focusout\", function() {\n            refreshImage(number);\n        });\n\n        // Eventlistener an das Inputfeld für die x-Koordinate anhängen\n        // Here the position of imagediv is set, not the position of the image itself, but the image is in the div.\n        const input_xposition = document.getElementById('id_unilabeltype_imageboard_xposition_' + (number));\n        input_xposition.addEventListener(\"focusout\", function() {\n            refreshImage(number);\n        });\n        const input_yposition = document.getElementById('id_unilabeltype_imageboard_yposition_' + (number));\n        input_yposition.addEventListener(\"focusout\", function() {\n            refreshImage(number);\n        });\n\n        // Eventlistener an das Inputfeld für die width anhängen\n        const input_targetwidth = document.getElementById('id_unilabeltype_imageboard_targetwidth_' + (number));\n        input_targetwidth.addEventListener(\"focusout\", function() {\n            refreshImage(number);\n        });\n\n        const input_targetheight = document.getElementById('id_unilabeltype_imageboard_targetheight_' + (number));\n        input_targetheight.addEventListener(\"focusout\", function() {\n            refreshImage(number);\n        });\n\n        const input_border = document.getElementById('id_unilabeltype_imageboard_border_' + (number));\n        input_border.addEventListener(\"focusout\", function() {\n            refreshImage(number);\n        });\n\n        let imagefileNode = document.getElementById('fitem_id_unilabeltype_imageboard_image_' + (number));\n        if (imagefileNode) {\n            let observer = new MutationObserver(refreshImage);\n            observer.observe(imagefileNode, {attributes: true, childList: true, subtree: true});\n        }\n    }\n\n    /**\n     * Sets the background image of the SVG to the current image in filemanager.\n     */\n    function refreshBackgroundImage() {\n        // previewimage vom filemanager id_unilabeltype_imageboard_backgroundimage_fieldset erhalten\n        let filemanagerbackgroundimagefieldset = document.getElementById('id_unilabeltype_imageboard_backgroundimage_fieldset');\n        let previewimage = filemanagerbackgroundimagefieldset.getElementsByClassName('realpreview');\n        let backgrounddiv = document.getElementById('unilabel-imageboard-background-area');\n        if (previewimage.length > 0) {\n            let backgroundurl = previewimage[0].getAttribute('src').split('?')[0];\n            // If the uploaded file reuses the filename of a previously uploaded image, they differ\n            // only in the oid. So one has to append the oid to the url.\n            if (previewimage[0].getAttribute('src').split('?')[1].includes('&oid=')) {\n                backgroundurl += '?oid=' + previewimage[0].getAttribute('src').split('&oid=')[1];\n            }\n            backgrounddiv.style.background = 'red'; // just to indicate changes during development.\n            backgrounddiv.style.backgroundSize = 'cover';\n            backgrounddiv.style.backgroundImage = \"url('\" + backgroundurl + \"')\";\n\n            const canvaswidthinput = document.getElementById('id_unilabeltype_imageboard_canvaswidth');\n            let canvaswidthselected = canvaswidthinput.selectedOptions;\n            let canvaswidth = canvaswidthselected[0].value;\n            backgrounddiv.style.width = canvaswidth + \"px\";\n\n            const canvasheightinput = document.getElementById('id_unilabeltype_imageboard_canvasheight');\n            let canvasheightselected = canvasheightinput.selectedOptions;\n            let canvasheight = canvasheightselected[0].value;\n            backgrounddiv.style.height = canvasheight + \"px\";\n        } else {\n            // Image might be deleted so update the backroundidv and remove backgroundimage in preview;\n            // ToDo    if (previewimage.length > 0) does not recognize when an image is deleted so we need a different condition!\n            backgrounddiv.style.background = 'green'; // just to indicate changes during development.\n            backgrounddiv.style.backgroundImage = \"url('')\";\n            const canvaswidthinput = document.getElementById('id_unilabeltype_imageboard_canvaswidth');\n            let canvaswidthselected = canvaswidthinput.selectedOptions;\n            let canvaswidth = canvaswidthselected[0].value;\n            backgrounddiv.style.width = canvaswidth + \"px\";\n\n            const canvasheightinput = document.getElementById('id_unilabeltype_imageboard_canvasheight');\n            let canvasheightselected = canvasheightinput.selectedOptions;\n            let canvasheight = canvasheightselected[0].value;\n            backgrounddiv.style.height = canvasheight + \"px\";\n        }\n    }\n\n    /**\n     * Gets the number of ALL elements in the form and then adds a div for each element to the dom if not already exists.\n     * We need a timeout\n     */\n    function refreshAllImages() {\n        const singleElements = document.querySelectorAll('[id^=\"fitem_id_unilabeltype_imageboard_image_\"]');\n        for (let i = 0; i < singleElements.length; i++) {\n            // Todo: Skip removed elements that are still in the dom but hidden.\n            let singleElement = singleElements[i].getAttribute('id');\n            let number = singleElement.split('fitem_id_unilabeltype_imageboard_image_')[1];\n            // Check if there exists already a div for this image.\n            const imageid = document.getElementById('unilabel-imageboard-imageid_' + number);\n            if (imageid === null) {\n                // Div does not exist so we need do add it do dom.\n                addImageToDom(number);\n                // ToDo: Do we need a timeout to wait until the dic was added so that refresh can work correctly?\n                // see also refreshImage ... there is already a timeout\n                refreshImage(number);\n            } else {\n                refreshImage(number);\n            }\n        }\n    }\n\n    /**\n     *\n     * @param {int} number\n     */\n    function addImageToDom(number) {\n        let backgroundArea = document.getElementById('unilabel-imageboard-background-area');\n        const imageid = document.getElementById('unilabel-imageboard-imageid_' + number);\n        if (imageid === null) {\n            // This div does not exist so we need do add it do dom.\n            backgroundArea.innerHTML = backgroundArea.innerHTML + renderFromTemplate(number);\n            refreshImage(number);\n        } else {\n            // Div already exists so we need only to refresh the image.\n            refreshImage(number);\n        }\n    }\n\n    /**\n     * Renders the div for the image in preview.\n     *\n     * @param {int} number\n     * @returns {string}\n     */\n    function renderFromTemplate(number) {\n        const imagedivashtml =\n            \"<div id='unilabel_imageboard_imagediv_\" + number + \"' style='z-index: 5; position: absolute;'>\" +\n            \"<div id='imageidtitle_\" + number + \"' class='unilabel-imageboard-title rounded' \" +\n            \" style='position: relative;'>Überschrift\" +\n            \"</div>\" +\n            \"<div id='imageidimage_\" + number + \"'>\" +\n            \"<img class='image' src='' id='unilabel-imageboard-imageid_\" + number + \"' style='position: relative;'>\" +\n            \"</div>\" +\n            \"</div>\";\n        return imagedivashtml;\n    }\n\n    /**\n     * If an image was uploaded or inputfields in the form changed then we need to refrech\n     * this image.\n     * @param {int} number\n     */\n    function refreshImage(number) {\n        // When there was an upload, then the number is NOT a number.\n        // ToDo: Do not yet know the best way how I will get the number in his case.\n        // For now if it is a number the normal refresh can be used and only ONE image will be refreshed.\n        // In the else code ther will be a refresh of ALL images until I can refactor this.\n        if (!Array.isArray(number)) {\n            let imageid = document.getElementById('unilabel-imageboard-imageid_' + number);\n            // Werte für das image setzen\n            let imagedata = getAllImagedataFromForm(number);\n            imageid.style.background = 'blue';\n            imageid.src = imagedata['src'];\n            const imagediv = document.getElementById('unilabel_imageboard_imagediv_' + number);\n            imagediv.style.left = parseInt(imagedata['xposition']) + \"px\";\n            imagediv.style.top = parseInt(imagedata['yposition']) + \"px\";\n\n            // Breite und Höhe\n            if (imagedata['targetwidth'] != 0) {\n                imageid.style.width = imagedata['targetwidth'] + \"px\";\n            } else {\n                imageid.style.width = \"auto\";\n            }\n            if (imagedata['targetheight'] != 0) {\n                imageid.style.height = imagedata['targetheight'] + \"px\";\n            } else {\n                imageid.style.height = \"auto\";\n            }\n            if (imagedata['title'] != \"\") {\n                imageid.title = imagedata['title'];\n            } else {\n                imageid.title = '';\n            }\n            let colourpicker = document.getElementById('id_unilabeltype_imageboard_titlebackgroundcolor_colourpicker');\n            let color = '';\n            if (colourpicker.value == '') {\n                color = '#000000';\n            } else {\n                color = colourpicker.value;\n            }\n            if (imagedata['border'] != 0) {\n                imageid.style.border = imagedata['border'] + \"px solid\";\n                imageid.style.borderColor = color;\n            } else {\n                imageid.style.border = \"0\";\n            }\n\n            // ToDo: add title if not empty\n            let title = imagedata['title'];\n            const imageidtitle = document.getElementById('imageidtitle_' + number);\n            imageidtitle.innerHTML = title;\n        } else {\n            //console.log(\"number ist ein array\" , number);\n            //console.log(\"number[0] ist ein array\" , number[0]);\n            //console.log(\"number[0].attributeName ist ein array\" , number[0].attributeName);\n            //////console.log(\"number[0].target ist ein array\", number[0].target);\n            // ToDo: nur genau den einen enuen listener hinzufügen ...\n            // hier schonaml ALLE\n            setTimeout(function() {\n                registerAllListenersForAllElements();\n            }, 300);\n            setTimeout(function() {\n                refreshAllImages();\n            }, 600);\n        }\n    }\n\n\n    /**\n     * The form has inputfields with date. This function gets the value from the inputfield with the given idselector\n     *\n     * @param {string} idselector 'id_unilabeltype_imageboard_yposition_' + number\n     * @returns {string}\n     */\n   /// function getValueFromForm(idselector) {\n   ///     return document.getElementById(idselector).getAttribute('value');\n   /// }\n\n\n    /**\n     * Get all data from image that is stored in the form and collects them in one array.\n     *\n     * @param {int} number of the image\n     * @returns {*[]} Array with the collected information that are set in the form for the image.\n     */\n    function getAllImagedataFromForm(number) {\n        let imageids = {\n            title: 'id_unilabeltype_imageboard_title_' + number,\n            xposition: 'id_unilabeltype_imageboard_xposition_' + number,\n            yposition: 'id_unilabeltype_imageboard_yposition_' + number,\n            targetwidth: 'id_unilabeltype_imageboard_targetwidth_' + number,\n            targetheight: 'id_unilabeltype_imageboard_targetheight_' + number,\n            src: '',\n            border: 'id_unilabeltype_imageboard_border_' + number,\n        };\n\n        let imagedata = [];\n        imagedata['title'] = document.getElementById(imageids.title).value;\n        imagedata['xposition'] = document.getElementById(imageids.xposition).value;\n        imagedata['yposition'] = document.getElementById(imageids.yposition).value;\n        imagedata['targetwidth'] = document.getElementById(imageids.targetwidth).value;\n        imagedata['targetheight'] = document.getElementById(imageids.targetheight).value;\n\n        // Src der Draftfile ermitteln\n        const element = document.getElementById('id_unilabeltype_imageboard_image_' + number + '_fieldset');\n        const imagetag = element.getElementsByTagName('img');\n        let src = '';\n        if (imagetag.length && imagetag.length != 0) {\n            src = imagetag[0].src;\n            src = src.split('?')[0];\n        }\n        imagedata['src'] = src;\n        imagedata['border'] = document.getElementById(imageids.border).value;\n\n        return imagedata;\n    }\n};\n\n"],"names":["setTimeout","refreshBackgroundImage","backgroundfileNode","document","getElementById","MutationObserver","observe","attributes","childList","subtree","canvasx","canvasy","querySelectorAll","addEventListener","addImageToDom","length","registerAllListenersForAllElements","refreshAllImages","activeItem","activeNumber","itemToMove","canvas","dragStart","event","target","classList","contains","preventDefault","getAttribute","split","position","getBoundingClientRect","offsetLeft","left","offsetTop","top","style","Math","round","clientX","clientY","drag","input_xposition","input_yposition","value","dragEnd","singleElements","i","registerAllListenersForSingleElement","number","refreshImage","imagefileNode","previewimage","getElementsByClassName","backgrounddiv","backgroundurl","includes","background","backgroundSize","backgroundImage","canvaswidth","selectedOptions","width","canvasheight","height","backgroundArea","innerHTML","renderFromTemplate","Array","isArray","imageid","imagedata","imageids","title","xposition","yposition","targetwidth","targetheight","src","border","imagetag","getElementsByTagName","getAllImagedataFromForm","imagediv","parseInt","colourpicker","color","borderColor"],"mappings":"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"}